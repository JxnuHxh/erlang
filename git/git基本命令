git在现代软件管理和版本控制中，是一个不可能忽略和跳过的工具，它的伟大在现在看来，
不仅是软件版本管理历史中的里程碑，更是现代软件开源社区中最强有力的工具！
创建name版本库： madir name

进入文件： cd 文件名

显示当前目录： pwd

把这个目录变成git可管理仓库： git init

把文件添加到仓库： git add 文件名

把文件提交到仓库： git commit -m"说明"

查看仓库当前状态 查看结果： git status

查看具体修改了什么： git diff 文件名

查看历史记录 数字是版本号(commit id)： git log

回退到上一个版本： git reset --hard HEAD^/(HEAD--1)

git有个指向当前版本的指针 回退版本时仅修改指针

获得版本号： git reflog

扔弃工作区的修改： git checkout --readme.text

撤销暂存区的修改 放回工作区： git reset HEAD file

删除文件： rm file

关联远程仓库： git remote add origin (远程仓库地址)

把分支master推送到远程库： git push -u origin master

拉去远程库文件内容： git pull

表示允许与历史无关的拉取： git pull origin master --allow-unrelated-histories

创建切换分支： git checkout 分支名

合并某分支到当前分支： git merge 分支名

删除分支： git branch -d 分支名

查看分支： git branch 分支名

储存工作现场： git stash

克隆项目： git clone url

查看文件内容： cat 文件名

保存退出 : wq